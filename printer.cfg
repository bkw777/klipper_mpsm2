# Klipper printer.cfg for the 2019 Monoprice Select Mini v2.
# make menuconfig: STM32F070, 8MHz, 8KiB offset, USB communication
# 
# [*] Enable extra low-level configuration options
#     Micro-controller Architecture (STMicroelectronics STM32)  --->
#     Processor model (STM32F070)  --->
#     Bootloader offset (8KiB bootloader)  --->
#     Clock Reference (8 MHz crystal)  --->
#     Communication interface (USB (on PA11/PA12))  --->
#     USB ids  --->
# (PA8,PB11,PB1) GPIO pins to set at micro-controller startup
# 
#######################################################################################
# Alternative, to connect by serial instead of usb:
#   Under [mcu] below use: serial: /dev/ttyAMA0
# 
#   Setup on the Pi - enable UART0 hardware on gpio pins 8 & 10, disable login on UART0
#     raspi-config: Interface > Serial > login No > hardware Yes
# 
#   Option 1 - connect via the LCD connector
#     menuconfig: Communication interface: Serial (USART1 PA9/PA10)
#     LCD connector pinout & connection to Pi
#       +---+
#       | 1 |  3V3 <--> do not connect
#       | 2    RX  <--> PI GPIO pin 8   UART0_TXD
#       | 3    TX  <--> PI GPIO pin 10  UART0_RXD
#       | 4 |  GND <--> PI GPIO pin 14  GND  (assuming pin 6 is used for power)
#       +---+
# 
#   Option 2 - connect via the P8 (un-used) connector
#     menuconfig: Communication interface: Serial (USART2 PA2/PA3)
#     P8 connector pinout & connection to Pi
#       +---+
#       | 1 |  3V3 <--> do not connect
#       | 2    RX  <--> PI GPIO pin 8   UART0_TXD
#       | 3    TX  <--> PI GPIO pin 10  UART0_RXD
#       | 4 |  GND <--> PI GPIO pin 14  GND  (assuming pin 6 is used for power)
#       +---+
#######################################################################################

# Flashing:
# 
#  * insert sd card into a usb reader connected to the pi
#  * sudo mount -o umask=0 /dev/sda /mnt
#  * cp -vf out/klipper.bin /mnt/firmware.bin
#  * touch /mnt/fcupdate.flg
#  * sudo umount /mnt
#  * Turn the printer off, insert the SD card, turn the printer on, wait 10 seconds.
#    The screen will not show anything, but the firmware should be updated well before 10 seconds.
#  * You may as well disconnect the cable to the LCD, klipper can not use it.
#    It just draws power and displays menus that don't actually work. It does function as a power-on light.

# Notes:
# 
# Bootloader offset preserves the stock bootloader, which preserves the
# ability to update firmware from the SD card again in the future.
# If you overwrite the bootloader, you'll need an ST-Link to update firmware again.
# 
# GPIO pins set at startup turns off all steppers holding current
# stepper X enable_pin: !PA8 -> PA8 low = enabled -> set PA8 high to disable
# Stepper Y - shared with Stepper X
# Stepper Z enable_pin: !PB11
# Extruder enable_pin: !PB1
# 
# Stepper directions are not consistent in MSPMv2 printers. Check the
# directions of your device with M503 in the stock firmware and adjust the
# dir_pins below if necessary.
# 
# Available pins & functions:
# LCD & P8 physical connectors are JST-PH 4-pin
# mcu is STM32F070CBT6
# Neither LCD nor P8 connectors can do I2C or SPI, and there are not enough free pins
#   available for bit-banged SPI, so there is no way to directly connect a display.
# Both P8 and LCD can do UART serial, and either can be used for connection to the Pi.
# P8 can do analog input.
# LCD is 5v i/o tolerant.
# 
# LCD connector
# +---+
# | 1 |  3V3
# | 2    PA10     USART1_RX , GPIO in/out , 5v tolerant
# | 3    PA9      USART1_TX , GPIO in/out , 5v tolerant
# | 4 |  GND
# +---+
# 
# P8 connector
# +---+
# | 1 |  3V3
# | 2    PA3      USART2_RX , ADC_IN2 , GPIO in/out , 3v3
# | 3    PA2      USART2_TX , ADC_IN3 , GPIO in/out , 3v3
# | 4 |  GND
# +---+

[stepper_x]
homing_speed: 40
step_pin: PB14
dir_pin: !PB15 # modify stepper direction if necessary
enable_pin: !PA8
# rotation_distance varies in the printer model. Check the correct
# step-rate of your Select Mini in the original firmware (with M503)
# and calculate the appropriate value for rotation_distance. This has
# to be done for all axes.
# This config contains values for later MSPMv2 printers.
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 34.544 # MXL 2.032 pitch * 17 teeth = 34.544
# https://www.amazon.com/dp/B077GMR328
#rotation_distance: 32 # GT2 2.0 pitch * 16 teeth = 32
endstop_pin: ^!PB4
position_endstop: -2
position_max: 124
position_min: -4

[stepper_y]
homing_speed: 40
step_pin: PB12
dir_pin: PB13
enable_pin: !PA8
microsteps: 16
full_steps_per_rotation: 200
rotation_distance: 34.544 # MXL 2.032 pitch * 17 teeth = 34.544
#rotation_distance: 32 # GT2 2.0 pitch * 16 teeth = 32
endstop_pin: ^!PA15
position_endstop: -2
position_max: 121
position_min: -4

[stepper_z]
homing_speed: 5
homing_retract_dist: 2
step_pin: PB10
dir_pin: PB2
enable_pin: !PB11
microsteps: 16
full_steps_per_rotation: 48 # "tin can" stepper
rotation_distance: 0.7 # M4 x 0.7 rod
endstop_pin: ^!PB5
position_endstop: 0.2
position_max: 122.3

[extruder]
step_pin: PB0
dir_pin: !PC13
enable_pin: !PB1
microsteps: 16
full_steps_per_rotation: 200
# https://www.amazon.com/Extruder-Upgraded-Aluminum-Filament-Creality/dp/B09D9DJV5V
# rotation_distance = D * pi
# D = Dmin + (Dmax-Dmin)/2   (diameter = mid point between Dmin & Dmax)
# |        | <- Dmax = 8.0mm
#  )))||(((  <- Dmin = 7.5mm
# |        |
# rotation_distance = 7.75 * pi = 24.347 # rough starting point, fine tune from here
# larger values = less extrusion (increasing rotation_distance by 1% is like decreasing flow by 1%)
rotation_distance: 25
pressure_advance: 0.2 # 0.4 # 0.6
nozzle_diameter: 0.4
filament_diameter: 1.750
heater_pin: PB6
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA0
control: pid
pid_kp: 20.003
pid_ki: 0.889
pid_kd: 112.519
min_temp: 10 # allow cold-pull but still detect broken or shorted wires
max_temp: 260
min_extrude_temp: 70 # allow cold-pull
max_extrude_only_distance: 600 # allow gcode automated cold-pull

[heater_bed]
heater_pin: PB7
sensor_type: EPCOS 100K B57560G104F
sensor_pin: PA1
# https://whambam3d.com/collections/flexible-build-system-for-fdm/products/160-x-130-kit
control: pid
pid_Kp: 72.951
pid_Ki: 2.546
pid_Kd: 522.509
min_temp: 0
max_temp: 100

# heatbreak fan
[heater_fan heater_fan]
pin: PB8
off_below: 0.25

# part cooling fan
[fan]
pin: PB3
off_below: 0.25

[mcu]
#serial: /dev/serial/by-id/usb-Klipper_stm32f070xb_2F0042000951504830333820-if00 # USB
serial: /dev/ttyAMA0 # GPIO UART0 with serial console login disabled
restart_method: command

[printer]
kinematics: cartesian
max_velocity: 150
max_accel: 800
max_z_velocity: 1.5
max_z_accel: 20

# Positions for BED_SCREWS_ADJUST
[bed_screws]
screw1: 22, 10
screw2: 22, 90
screw3: 98, 90
screw4: 98, 10

# No I2C or SPI pins available, not enough pins available for bit-banged software spi
# (might be able to get one more output-only pin
# by moving the chassis fan to the psu). So there is no way to directly
# unless/until klipper supports a serial display or bit-banged soft i2c.
# bit-banged spi requires 5 pins and we only have 4 pins available
#[display]
#lcd_type: ssd1306 # Velleman VMA438
#i2c_address: 120 # address 0x78
#i2c_bus: i2c1a # LCD connector (hacked stm32f0_i2c.c)

# I2C display connected to the host PI
# Enable i2c in raspi-config & reboot, then follow the directions:
# "Install the rc script" and "Building the micro-controller code"
# https://www.klipper3d.org/RPi_microcontroller.html
# Then connect the I2C display to the PI's GPIO pins:
# 1 (3V3)  3 (I2C1_SDA)  5 (I2C1_SCL)  9 (GND)
# 
# Worked for an hour, then stopped for no explicable reason.
# Unreliable. Worse, it locks up the PI.
# Rebooting didn't bring it back.
#[mcu host]
#serial: /tmp/klipper_host_mcu

# worked for a few hours, survived a few reboots
# stopped working, no idea why
#[display]
#lcd_type: ssd1306
#lcd_type: sh1106
#i2c_mcu: host
#i2c_bus: i2c.1
# optional rotary encoder
#encoder_pins: ^host:gpiochip0/gpio7, ^host:gpiochip0/gpio8
#click_pin: !host:gpiochip0/gpio4

# no error but no worky either
#[display]
#lcd_type: sh1106
##spi_bus: spidev0.0
#cs_pin: host:gpiochip0/gpio24
#dc_pin: host:gpiochip0/gpio25
##spi_software_sclk_pin: host:gpiochip0/gpio11
##spi_software_mosi_pin: host:gpiochip0/gpio10
##spi_software_miso_pin: host:gpiochip0/gpio9

######################################################################
# Optional: Touch sensor via unpopulated header
######################################################################
# 
# Later motion controllers have a unused socket that can be used to
# attach a probe or other additional hardware.
# 
# Older BLtouch sensors and knock offs require 5V supply voltage.
# Since the motion controller does not supply 5V you will need to add
# an appropriate power source. Easiest is probably soldering a 5V step
# down converter to the 12V supply pins. When running the touch sensor
# on 5V you will also need reduce the voltage on the sensor_pin with a
# voltage divider or level shifter. The control_pin can be attached to
# a 5V touch sensor directly.
#[bltouch]
#control_pin: PA2
#sensor_pin: PA3
#z_offset: 1
# 
# Alternatively, pins PA9 & PA10 on the LCD connector are 5v tolerant.
# You can use the P8 connector (PA2/PA3) for connection to the PI and use the LCD
# connector for 5v hardware. Pin 1 still only provides 3.3v so you still need
# a 5v power source, but don't need a level shifter for the sensor_pin.
#[bltouch]
#control_pin: PA10
#sensor_pin: PA9
#z_offset: 1

[temperature_sensor host_cpu_temp]
sensor_type: temperature_host
min_temp: 10
max_temp: 100

[temperature_sensor mcu_temp]
sensor_type: temperature_mcu
min_temp: 0
max_temp: 100

# Firmware Retraction
# https://www.thingiverse.com/thing:4532977
[firmware_retraction]
retract_length: 1.5
retract_speed: 60
unretract_extra_length: 0.2
unretract_speed: 60

# Wrapper for SET_RETRACTION to display the value during tuning tower.
# TUNING_TOWER COMMAND=SET_RETRACTION_V PARAMETER=LENGTH START=ACTOR=.05
[gcode_macro SET_RETRACTION_V]
gcode:
  SET_RETRACTION RETRACT_LENGTH={params.LENGTH|float}
  GET_RETRACTION

[gcode_arcs]
#resolution: 0.1

[gcode_macro PRINT_START]
gcode:
  G28 ;home
  G21 ;metric units
  G90 ;absolute positioning
  ;G0 X5 ;move in from cut corner
  ;M83 ;relative extruding
  ;G1 X115 E12 F3600 ;purge line
  PURGE_LINE
  ;M82 ;absolute extruding

[gcode_macro PURGE_LINE]
; Purge line from 5,0 to 115,0 to stay inside chamfered corners of bed.
gcode:
    G1 Z2                          ; list nozzle to prevent scratch
    G0 X5 Y0 F7200                 ; front corner, but move right to clear whambam chamfer
    G1 Z0.2 F90                    ; nozzle to bed
    G92 E0                         ; reset extruder
    G1 E5 F500                     ; PRINT_START UN-RETRACT -- MATCH this to PRINT_END RETRACT
    G1 X115 E12 F3600              ; purge line, stop before whambam chamfer
    G92 E0                         ; reset extruder
    G1 Z2                          ; lift nozzle to prevent scratch

[gcode_macro PRINT_END]
gcode:
  TURN_OFF_HEATERS
  M82 ;relative extruding
  G1 E-5 F500                      ; PRINT_END RETRACT -- MATCH this to PRINT_START UN-RETRACT
  G91 ;relative positioning
  G0 Z2 F90 ;lift nozzle 2mm
  G90 ;absolute positioning
  G1 X120 Y120 F7200 ;eject, park far right for the bowden tube
  M84 ;power off steppers

# automated cold-pull
[include cold-pull.cfg]

# bed-levelling / layer 1 height convenience
[include bed-level.cfg]

# This is a FluiddPI installation
[include fluidd.cfg]
